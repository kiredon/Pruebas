<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">


	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:/mx/com/sagarpa/snics/config/runtime.properties</value>
		</property>
	</bean>

	<context:annotation-config />
	<context:component-scan base-package="mx.com.sagarpa.snics.persistence.entities" />

	<!-- atena preauth -->
	<bean id="sessionFactorySnics" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">

		<property name="dataSource">
			<ref bean="dataSourceSnics" />
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${snics.hibernate.dialect}</prop>
				<prop key="hibernate.query.substitutions">true 'T', false 'F'</prop>
				<prop key="hibernate.connection.autocommit">true</prop>
				<prop key="hibernate.show_sql">${snics.hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${snics.hibernate.format_sql}</prop>
				<prop key="hibernate.use_sql_comments">${snics.hibernate.use_sql_comments}</prop>

			</props>
		</property>

		<property name="packagesToScan" value="${snics.hibernate.entities.package}" />
	</bean>

	<!-- # -->
	<!-- Transaction Management -->
	<!-- # -->
	
	<tx:annotation-driven transaction-manager="txManager" />

	<beans profile="JEE">
		<bean id="txManager" class="org.springframework.transaction.jta.JtaTransactionManager">
			<property name="allowCustomIsolationLevels" value="true" />
		</bean>

	</beans>

	<beans profile="STANDALONE">

		<!-- Transaction managers -->
		<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
			init-method="init" destroy-method="close" depends-on="userTransactionService">
			<!-- when close is called, should we force transactions to terminate or not? -->
			<property name="forceShutdown" value="false" />
			<!-- Do not create a transaction service as we have specified the bean in this file -->
			<property name="startupTransactionService" value="false" />
		</bean>
		<!-- Also use Atomikos UserTransactionImp, needed to configure Spring -->
		<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
			<property name="transactionTimeout">
				<value>300</value>
			</property>
		</bean>
		<!-- Configure the Spring framework to use JTA transactions from Atomikos -->
		<bean id="txManager" class="org.springframework.transaction.jta.JtaTransactionManager">
			<property name="transactionManager">
				<ref bean="atomikosTransactionManager" />
			</property>
			<property name="userTransaction">
				<ref bean="atomikosUserTransaction" />
			</property>
		</bean>

		<bean id="userTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp"
			init-method="init" destroy-method="shutdownForce">
			<constructor-arg>
				<!-- IMPORTANT: specify all Atomikos properties here -->
				<props>
					<prop key="com.atomikos.icatch.service">com.atomikos.icatch.standalone.UserTransactionServiceFactory</prop>
					<prop key="com.atomikos.icatch.output_dir">${atomikos.output.dir}</prop>
					<prop key="com.atomikos.icatch.log_base_dir">${atomikos.log.dir}</prop>
					<prop key="com.atomikos.icatch.max_actives">${atomikos.max.activetransactions}</prop>
				</props>
			</constructor-arg>
		</bean>
	</beans>

</beans>