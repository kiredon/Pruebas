<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.2.xsd
         http://www.springframework.org/schema/jee 
		 http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		 http://www.springframework.org/schema/tx 
     	 http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		 http://www.springframework.org/schema/util
		 http://www.springframework.org/schema/util/spring-util-2.0.xsd
		   http://camel.apache.org/schema/spring 
       http://camel.apache.org/schema/spring/camel-spring.xsd">
		 
		 
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >
		<property name="location">
			<value>classpath:/mx/com/sagarpa/snics/config/runtime.properties</value>
		</property>
	</bean>
	
	<!-- bind your messages.properties -->
	<bean class="org.springframework.context.support.ResourceBundleMessageSource" id="messageSource">
		<property name="basename" value="messages.properties" />
	</bean>
	
	<bean id="resourceBundleSource" class="org.springframework.context.support.ResourceBundleMessageSource">
	    <property name="basenames">
	        <list>
	            <value>messages.properties</value>
	        </list>
	    </property>
	</bean>
 


	<!-- Annotation support poder injectar con @Autowired etc -->
	<context:annotation-config />
	<!-- Poder declarar beans con annotations como @Component etc -->
	<context:component-scan base-package="mx.com.sagarpa.snics.web.service" />
	
	<!-- enable the configuration of transactional behavior based on annotations
		poder usar @transactional -->
  	<tx:annotation-driven transaction-manager="txManager"/> <!-- choose between prod and test envs. Test env provides fast development -->
	

		
</beans>